name: Localization Testing

on:
  push:
    branches: [main, develop]
    paths:
      - "src/locales/**"
      - "tests/localization/**"
      - ".github/workflows/localization.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "src/locales/**"
      - "tests/localization/**"
  schedule:
    - cron: "0 0 * * 2" # Weekly on Tuesday
  workflow_dispatch: # Allow manual trigger
    inputs:
      languages:
        description: "Languages to test (comma-separated)"
        required: false
        default: "all"
        type: string

jobs:
  validate:
    name: Validate Translations
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install polib i18n-checker deep-translator

      - name: Check translation files
        run: |
          python scripts/i18n/validate_translations.py \
            --locale-dir src/locales \
            --output validation_report.json

      - name: Verify string formatting
        run: |
          python scripts/i18n/check_string_formats.py \
            --locale-dir src/locales \
            --output format_report.json

      - name: Check for missing translations
        run: |
          python scripts/i18n/find_missing_translations.py \
            --locale-dir src/locales \
            --output missing_report.json

      - name: Generate validation report
        run: |
          {
            echo "# Translation Validation Report"
            echo "## Format Validation"
            cat format_report.json | jq -r '.issues[] | "- " + .'
            
            echo "## Missing Translations"
            cat missing_report.json | jq -r '.missing[] | "- " + .'
            
            echo "## General Issues"
            cat validation_report.json | jq -r '.issues[] | "- " + .'
          } > validation-report.md

  test-languages:
    name: Test Language Support
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: ${{ fromJson(github.event.inputs.languages == 'all' && '["en", "es", "fr", "de", "pt", "ru", "ja", "ko", "zh"]' || format('["{0}"]', github.event.inputs.languages)) }}

    steps:
      - name: Run language tests
        run: |
          python tests/localization/test_language.py \
            --language ${{ matrix.language }} \
            --output ${{ matrix.language }}_report.json

      - name: Test RTL support
        if: matrix.language == 'ar' || matrix.language == 'he'
        run: |
          python tests/localization/test_rtl_support.py \
            --language ${{ matrix.language }} \
            --output ${{ matrix.language }}_rtl_report.json

      - name: Test character encoding
        run: |
          python tests/localization/test_encoding.py \
            --language ${{ matrix.language }} \
            --output ${{ matrix.language }}_encoding_report.json

      - name: Generate language report
        run: |
          {
            echo "# Language Test Report: ${{ matrix.language }}"
            echo "## General Tests"
            cat ${{ matrix.language }}_report.json | jq -r '.tests[] | "- " + .'
            
            echo "## Encoding Tests"
            cat ${{ matrix.language }}_encoding_report.json | jq -r '.issues[] | "- " + .'
            
            if [ -f "${{ matrix.language }}_rtl_report.json" ]; then
              echo "## RTL Support"
              cat ${{ matrix.language }}_rtl_report.json | jq -r '.issues[] | "- " + .'
            fi
          } > ${{ matrix.language }}_analysis.md

  machine-translation:
    name: Machine Translation Check
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Check translation quality
        run: |
          python scripts/i18n/check_translation_quality.py \
            --locale-dir src/locales \
            --output quality_report.json

      - name: Generate quality report
        run: |
          {
            echo "# Translation Quality Report"
            echo "## Quality Scores"
            cat quality_report.json | jq -r '.scores[] | "- " + .language + ": " + (.score | tostring)'
            
            echo "## Potential Issues"
            cat quality_report.json | jq -r '.issues[] | "- " + .'
          } > quality-report.md

  report:
    name: Generate Report
    needs: [validate, test-languages, machine-translation]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Combine reports
        run: |
          {
            echo "# Localization Test Report"
            
            echo "## Validation Results"
            cat validation-report.md
            
            echo "## Language Test Results"
            for lang in */analysis.md; do
              cat $lang
            done
            
            if [ -f "quality-report.md" ]; then
              echo "## Translation Quality"
              cat quality-report.md
            fi
          } > localization-report.md

      - name: Create issue for problems
        if: failure() || contains(needs.*.result, 'failure')
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('localization-report.md', 'utf8');
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üåê Localization Issues Detected',
              body: report,
              labels: ['localization', 'bug']
            });

      - name: Update metrics
        run: |
          {
            echo "localization_tests_total $(date +%s)"
            echo "localization_issues $(cat validation_report.json | jq '.issues | length')"
            echo "missing_translations $(cat missing_report.json | jq '.missing | length')"
          } > localization_metrics.txt

          curl -X POST ${{ secrets.PROMETHEUS_PUSHGATEWAY }}/metrics/job/localization_testing \
            --data-binary "@localization_metrics.txt"

      - name: Notify status
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "Localization Tests Complete"
          description: |
            Status: ${{ contains(needs.*.result, 'failure') && '‚ùå Issues Found' || '‚úÖ All Tests Passed' }}

            Check the workflow run for detailed results.
          color: ${{ contains(needs.*.result, 'failure') && '0xff0000' || '0x00ff00' }}
          username: "Localization Bot"
