[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "osrs-discord-bot"
version = "1.0.0"
description = "Discord bot with OSRS integration, Plex streaming, and game features"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Project Contributors"}
]

dependencies = [
    "discord.py>=2.0.0",
    "plexapi>=4.0.0",
    "prometheus-client>=0.9.0",
    "redis>=4.0.0",
    "SQLAlchemy>=1.4.0",
    "aiohttp>=3.8.0",
    "pytest>=7.0.0",
    "mypy>=1.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0"
]

[tool.setuptools]
packages = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--asyncio-mode=auto"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "**/__init__.py",
    "**/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100
known_first_party = ["src"]
known_third_party = ["discord", "pytest", "redis"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.setuptools_scm]
write_to = "src/_version.py"

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0621",  # redefined-outer-name
    "W0212",  # protected-access
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
]

[tool.pylint.format]
max-line-length = 100

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101"]  # skip assert warnings

[tool.pyright]
include = ["src"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "src/experimental",
    "src/typestubs"
]
defineConstant = { DEBUG = true }
venvPath = "."
venv = "venv"

reportMissingImports = true
reportMissingTypeStubs = false

pythonVersion = "3.8"
pythonPlatform = "All"

executionEnvironments = [
  { root = "src" }
]
