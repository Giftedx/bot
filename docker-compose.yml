version: '3.8'

services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: osrs-discord-bot
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - REDIS_URL=redis://redis:6379/0
      - COMMAND_PREFIX=${COMMAND_PREFIX:-!}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  redis:
    image: redis:6-alpine
    container_name: osrs-discord-bot-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: osrs-discord-bot-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - bot-network

  prometheus:
    image: prom/prometheus:latest
    container_name: osrs-discord-bot-prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - bot-network

  grafana:
    image: grafana/grafana:latest
    container_name: osrs-discord-bot-grafana
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - bot-network

networks:
  bot-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
